#!/usr/bin/env python
#
# pyepg - Front end script for pyepg
#
# Copyright (C) 2012 Adam Sutton <dev@adamsutton.me.uk>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
"""
"""

# ###########################################################################
# Imports
# ###########################################################################

# System
import os, sys, datetime
from optparse import OptionParser

# Local
lib_path = os.path.join(os.path.dirname(sys.argv[0]), 'lib')
sys.path.append(os.path.abspath(lib_path))
from pyepg.main import main, configure

# ###########################################################################
# Configuration
# ###########################################################################

optp = OptionParser()
optp.add_option('-c', '--config', default=None,
                help='Specify alternative configuration directory')
optp.add_option('-o', '--option', default=[], action='append',
                help='Specify configuration option')
optp.add_option('-g', '--grabber', default=None,
                help='Specify grabber')
optp.add_option('-f', '--formatter', default=None,
                help='Specify formatter')

# ###########################################################################
# Run
# ###########################################################################

if __name__ == '__main__':

  # Process command line
  (opts,args) = optp.parse_args()
  tmp = {}
  for o in opts.option:
    p = o.split('=')
    if len(p) == 2:
      tmp[p[0]] = p[1]
  if opts.grabber:   tmp['grabber']   = opts.grabber
  if opts.formatter: tmp['formatter'] = opts.formatter

  # Configure
  if 'configure' in args:
    configure(opts.config, tmp)
    sys.exit(0)

  # Run
  main(opts.config, tmp)
